{"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/index.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import { ParametersError, TransitionError } from './error';\r\nimport StateNode from './stateNode';\r\nimport { iterateState } from './utils';\r\nclass Windmill {\r\n    constructor(config, options) {\r\n        this.root = this.current = this.initialNode = new StateNode(config, options);\r\n        this.config = {\r\n            history: config.history || 'default',\r\n            initialState: config.initialState,\r\n        };\r\n        this.initialState = config.initialState;\r\n        this.history = [];\r\n        this._nodeMap = new Map();\r\n        config.states\r\n            && iterateState(config.states, (stateConfig) => {\r\n                const stateNode = new StateNode(Object.assign({}, stateConfig, { parent: this.root }));\r\n                this._nodeMap.set(stateNode.key, stateNode);\r\n            }, 0);\r\n    }\r\n    start(startNode) {\r\n        if (!startNode && !this.initialState) {\r\n            console.error(`\n                Start state machine expect a startNode or initialNode,\n                But got startNode: ${startNode} & initialNode: ${this.initialState}\n            `);\r\n            return this;\r\n        }\r\n        const start = startNode || this.initialState;\r\n        if (!this._nodeMap.has(start)) {\r\n            throw new ParametersError(`\n                Start state is not in the _nodeMap, please check your\n                parameter ${startNode}\n            `);\r\n        }\r\n        this.current = this._nodeMap.get(start);\r\n        this.history.push(start);\r\n        return this;\r\n    }\r\n    transition(action) {\r\n        try {\r\n            let resolved = false;\r\n            typeof action === 'string'\r\n                && (resolved = true)\r\n                && this._resolveStateToNode(action);\r\n            !action\r\n                && typeof action !== 'boolean'\r\n                && (resolved = true)\r\n                && this._resolveStateToNode();\r\n            !resolved && console.error(`\n                empty action will trigger a empty transition.\n            `);\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n        return this;\r\n    }\r\n    bindHooks(hooks, state) {\r\n        let hookAll = false;\r\n        if (!state || !state.length) {\r\n            hookAll = true;\r\n            state = [];\r\n        }\r\n        const { _nodeMap } = this;\r\n        _nodeMap.forEach((v, k) => {\r\n            if (hookAll || (state && ~state.indexOf(k))) {\r\n                _nodeMap.get(k).bindHooks(hooks);\r\n            }\r\n        });\r\n        return this;\r\n    }\r\n    get nodeMap() {\r\n        return this._nodeMap;\r\n    }\r\n    _resolveStateToNode(action) {\r\n        const nextState = this.current.findNextState(action);\r\n        if (!this._nodeMap.has(nextState)) {\r\n            throw new TransitionError(`target state: \\`${nextState}\\` is not exist.`);\r\n        }\r\n        const target = this._nodeMap.get(nextState);\r\n        target.transition(nextState, action, (result, hooks) => {\r\n            this._execTransition(result, hooks);\r\n        });\r\n    }\r\n    _execTransition(result, hooks) {\r\n        const resultNode = this._nodeMap.get(result);\r\n        if (!resultNode) {\r\n            throw new Error(`目标状态：\\`${result}\\`不存在!`);\r\n        }\r\n        this.current = resultNode;\r\n        this.history.push(result);\r\n        try {\r\n            hooks();\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}\r\nexport default Windmill;\r\n//# sourceMappingURL=index.js.map","dtsmap":{"name":"/Users/luxin/Develop/toy/windmill-fsm/src/index.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"index.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"index.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,SAAS,MAAM,aAAa,CAAC;AACpC,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,SAAS,CAAC;AAG3C,cAAM,QAAS,YAAW,QAAQ;IACvB,MAAM,EAAE,MAAM,CAAC;IACf,IAAI,EAAE,SAAS,CAAC;IAChB,OAAO,EAAE,GAAG,EAAE,CAAC;IACf,OAAO,EAAE,SAAS,CAAC;IACnB,WAAW,EAAE,SAAS,CAAC;IAE9B,OAAO,CAAC,QAAQ,CAAmB;IACnC,OAAO,CAAC,YAAY,CAAS;gBAEjB,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC,EAAE,GAAG;IA2B/B,KAAK,CACR,SAAS,CAAC,EAAE,MAAM,GACnB,QAAQ;IAqBJ,UAAU,CACb,MAAM,EAAE,MAAM,GACf,QAAQ;IAuBJ,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,EAAE,MAAM,EAAE,GAAG,QAAQ;aAkBhD,OAAO,EAAI,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC;IAItC,OAAO,CAAC,mBAAmB;IAsB3B,OAAO,CAAC,eAAe;CAkB1B;AAED,eAAe,QAAQ,CAAC\"}"},"dts":{"name":"/Users/luxin/Develop/toy/windmill-fsm/src/index.d.ts","writeByteOrderMark":false,"text":"import StateNode from './stateNode';\r\nimport { IHooks, IMachine } from './types';\r\ndeclare class Windmill implements IMachine {\r\n    config: object;\r\n    root: StateNode;\r\n    history: any[];\r\n    current: StateNode;\r\n    initialNode: StateNode;\r\n    private _nodeMap;\r\n    private initialState;\r\n    constructor(config: any, options?: any);\r\n    start(startNode?: string): Windmill;\r\n    transition(action: string): Windmill;\r\n    bindHooks(hooks: IHooks, state?: string[]): Windmill;\r\n    readonly nodeMap: Map<string, any>;\r\n    private _resolveStateToNode;\r\n    private _execTransition;\r\n}\r\nexport default Windmill;\r\n//# sourceMappingURL=index.d.ts.map"}}
